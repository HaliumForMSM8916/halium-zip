#!/bin/bash -x
#
# Halium installer script
# =======================
#
# Copyright (C) 2017 JBBgameich
# Copyright (C) 2017 TheWiseNerd
# Copyright (C) 2018 IkerST
#
# License: GPLv3
#
# dependencies: qemu binfmt-support qemu-user-static e2fsprogs sudo simg2img rpl

LOCATION="$(dirname "$(readlink -f "$0")")"

# Defaults
export ROOTFS_RELEASE="none"
export INSTALL_MODE="img"
export DATE="$(date +"%d%m%Y")"
export NON_INTERACTIVE="false"
export ADD_UDEV="false"
export DO_COPY_SSH_KEY=false
export SSH_KEY=~/.ssh/id_rsa.pub

function quiet () {
    cat > /dev/null
}

out=quiet

# Include functions
source $LOCATION/functions/misc.sh

# parse options
while [ -n "$1" ] ; do
	case "$1" in
	"-p")
		shift
		export ROOTFS_RELEASE="$1"
		case $ROOTFS_RELEASE in
		"halium" | "debian-pm" | "reference" | "debian-pm-caf" | "pm" | "neon" | "ut" | "none")
			;;
		*)
			echo "Unsupported post install release! Exiting now"
			exit 1
			;;
		esac
		;;
	"-m" | "--mode")
		shift
		export INSTALL_MODE="$1"
		case $INSTALL_MODE in
		"img" | "dir" )
			;;
		*)
			echo "Unsupported install mode! Exiting now"
			exit 1
			;;
		esac
		;;
	"-u" | "--udev")
		shift
		export ADD_UDEV="true"
		export FILE_UDEV="$1"
		;;
	"-n" | "--non-interactive" )
		export NON_INTERACTIVE="true"
		;;
	"-i")
		DO_COPY_SSH_KEY=true
		;;
	"-v")
		out="cat -"
		;;
	*)
		break
		;;
	esac
	shift
done

export FINAL_ZIP="$ROOTFS_RELEASE"-Installer-${INSTALL_MODE}_mode-Beta-"$DATE".zip

# parse positional parameters
if [ "$#" -lt 3 ] || [ "$#" -gt 4 ]; then
	usage
	exit
fi

export ROOTFS_TAR=$1
export AND_IMAGE=$2
export BOOT_IMG=$3
export DEVICE=$4
if [ ! -f $ROOTFS_TAR ] || [ ! -f $AND_IMAGE ] || [ ! -f $BOOT_IMG ] || [ -z $DEVICE ]; then
	usage
	exit
fi

# Check for missing dependencies
if ! init_checks; then
	exit
fi

export ROOTFS_DIR=$(mktemp -d .halium-install-rootfs.XXXXX)
export IMAGE_DIR=$(mktemp -d .halium-install-imgs.XXXXX)
export INSTALLDIR=$(mktemp -d .install.XXXXX)

# Logic that depends on the opts being parsed
source $LOCATION/functions/distributions.sh
source $LOCATION/functions/core.sh

# Start installer
echo "Debug: Chosen rootfs is $ROOTFS_TAR"
echo "Debug: Chosen android image is $AND_IMAGE"
echo "Debug: Chosen release is $ROOTFS_RELEASE"
echo

case "$INSTALL_MODE" in
"img")
	echo "I: Writing rootfs into mountable image"
	convert_rootfs_to_img $IMAGE_SIZE 2>&1 | $out
	;;
"dir")
	echo "I: Extracting rootfs"
	convert_rootfs_to_dir 2>&1 | $out
	;;
esac

echo "I: Writing android image into mountable image"
convert_androidimage 2>&1 | $out

if [ "$ADD_UDEV" = "true" ] && [ "$INSTALL_MODE" = "img" ]; then
	echo "I: Adding Udev Rules"
	add_udev $FILE_UDEV
fi

echo "I: Running post installation tasks"
post_install $ROOTFS_RELEASE $NON_INTERACTIVE

if [ "$INSTALL_MODE" = "dir" ]; then
	echo "I: Injecting android image into rootfs"
	inject_androidimage
fi

if [ "$INSTALL_MODE" = "img" ]; then
	echo "I: Unmounting images"
	unmount
fi

echo "I: Shrinking images"
shrink_images

case "$INSTALL_MODE" in
"img")
	echo "I: Copiyng images to install dir"
	copy_img 2>&1 | $out
	;;
"dir")
	echo "I: Copiyng dir to install dir"
	copy_dir 2>&1 | $out
	;;
esac

echo "I: Preparing install dir"
prepare_install_script $ROOTFS_RELEASE $INSTALL_MODE 2>&1 | $out

echo "I: Making zip"
make_zip

echo "I: Cleaning up host"
clean

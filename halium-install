#!/usr/bin/env bash
#
# Halium installer script
# =======================
#
# Copyright (C) 2017 JBBgameich
# Copyright (C) 2017 TheWiseNerd
# Copyright (C) 2018 IkerST
#
# License: GPLv3
#
# dependencies: qemu binfmt-support qemu-user-static e2fsprogs sudo simg2img rpl

export LOCATION="$(dirname "$(readlink -f "$0")")"
export ROOTFS_RELEASE="none"
export DATE="$(date +"%d%m%Y")"

function quiet ( ) {
    cat > /dev/null
}

out=quiet

# Include functions
source $LOCATION/functions/misc.sh

# parse options
while [ -n "$1" ] ; do
	case "$1" in
	"-p")
		shift
		export ROOTFS_RELEASE="$1"
		;;
    "-v")
        out="cat -"
        ;;
	*)
		break
		;;
	esac
	shift
done

# parse positional parameters
if [ "$#" -lt 2 ] || [ "$#" -gt 3 ]; then
	usage
	exit
fi

export ROOTFS_TAR=$1
export AND_IMAGE=$2
export DEVICE=$3
if [ ! -f $ROOTFS_TAR ] || [ ! -f $AND_IMAGE ]; then
	usage
	exit
fi

# Check for missing dependencies
if ! init_checks; then
	exit
fi

export ROOTFS_DIR=$(mktemp -d .halium-install-rootfs.XXXXX)
export IMAGE_DIR=$(mktemp -d .halium-install-imgs.XXXXX)
export INSTALLDIR=$(mktemp -d .install.XXXXX)
export SIMGDAT=$(mktemp -d .simgdat.XXXXX)
export FINAL_ZIP="$ROOTFS_RELEASE"-Installer-Beta-"$DATE".zip

# Logic that depends on the opts being parsed
source $LOCATION/functions/distributions.sh
source $LOCATION/functions/core.sh

# Start installer
echo "Debug: Chosen rootfs is $ROOTFS_TAR"
echo "Debug: Chosen android image is $AND_IMAGE"
echo "Debug: Chosen release is $ROOTFS_RELEASE"
echo

echo "I: Writing rootfs into mountable image"
convert_rootfs $IMAGE_SIZE 2>&1 | $out

echo "I: Writing android image into mountable image"
convert_androidimage 2>&1 | $out

echo "I: Running post installation tasks"
post_install $ROOTFS_RELEASE

echo "I: Unmounting images"
unmount

echo "I: Shrinking images"
shrink_images

echo "I: Copiyng images to convert dir"
copy_convert

echo "I: Creating sparse and dat files"
convert_simgdat

echo "I: Copiyng *.dat to install dir"
copy_dat

echo "I: Preparing install dir"
prepare_zip

echo "I: Making zip"
make_zip

echo "I: Cleaning up host"
clean